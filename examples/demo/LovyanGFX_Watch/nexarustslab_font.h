#ifndef NEXARUSTSLAB_FONT_H
#define NEXARUSTSLAB_FONT_H

#include <LovyanGFX.hpp>

// NexaRustSlab Font - Custom Bitmap Font
// Based on VolosR CustomFonts format with industrial/bold style

// Font bitmap data in VolosR format
const uint8_t nexarustslab_font[] PROGMEM = {
    // Character metrics and bitmap data
    // Format: [char_code, width, height, x_offset, y_offset, x_advance, bitmap_data...]
    
    // Space (32)
    0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    // Numbers 0-9 (48-57) - Bold industrial style
    // 0
    0x30, 0x18, 0x20, 0x00, 0x00, 0x18, 
    0x00, 0x00, 0x1F, 0xF0, 0x3F, 0xF8, 0x70, 0x1C, 0x60, 0x0C, 0x60, 0x0C, 0x60, 0x0C, 0x60, 0x0C,
    0x60, 0x0C, 0x60, 0x0C, 0x60, 0x0C, 0x60, 0x0C, 0x70, 0x1C, 0x3F, 0xF8, 0x1F, 0xF0, 0x00, 0x00,
    
    // 1
    0x31, 0x0C, 0x20, 0x00, 0x00, 0x0C,
    0x00, 0x60, 0x00, 0xE0, 0x01, 0xE0, 0x03, 0xE0, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60,
    0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x60, 0x7F, 0xFE, 0x7F, 0xFE, 0x00, 0x00,
    
    // 2
    0x32, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x3F, 0xF0, 0x7F, 0xF8, 0x60, 0x1C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x1C, 0x00, 0x38, 0x00, 0x70,
    0x00, 0xE0, 0x01, 0xC0, 0x03, 0x80, 0x07, 0x00, 0x0E, 0x00, 0x7F, 0xFE, 0x7F, 0xFE, 0x00, 0x00,
    
    // 3
    0x33, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x3F, 0xF0, 0x7F, 0xF8, 0x60, 0x1C, 0x00, 0x0C, 0x00, 0x0C, 0x00, 0x1C, 0x1F, 0xF8, 0x1F, 0xF0,
    0x00, 0x1C, 0x00, 0x0C, 0x00, 0x0C, 0x60, 0x1C, 0x7F, 0xF8, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    
    // 4
    0x34, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x00, 0x30, 0x00, 0x70, 0x00, 0xF0, 0x01, 0xF0, 0x03, 0xF0, 0x06, 0xF0, 0x0C, 0xF0, 0x18, 0xF0,
    0x30, 0xF0, 0x60, 0xF0, 0x7F, 0xFE, 0x7F, 0xFE, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0xF0, 0x00, 0x00,
    
    // 5
    0x35, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x7F, 0xFE, 0x7F, 0xFE, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x7F, 0xF0, 0x7F, 0xF8, 0x00, 0x1C,
    0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x60, 0x1C, 0x7F, 0xF8, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    
    // 6
    0x36, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x1F, 0xF0, 0x3F, 0xF8, 0x70, 0x1C, 0x60, 0x00, 0x60, 0x00, 0x60, 0x00, 0x7F, 0xF0, 0x7F, 0xF8,
    0x70, 0x1C, 0x60, 0x0C, 0x60, 0x0C, 0x70, 0x1C, 0x3F, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    
    // 7
    0x37, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x7F, 0xFE, 0x7F, 0xFE, 0x00, 0x0C, 0x00, 0x18, 0x00, 0x30, 0x00, 0x60, 0x00, 0xC0, 0x01, 0x80,
    0x03, 0x00, 0x06, 0x00, 0x0C, 0x00, 0x18, 0x00, 0x30, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    // 8
    0x38, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x1F, 0xF0, 0x3F, 0xF8, 0x70, 0x1C, 0x60, 0x0C, 0x60, 0x0C, 0x70, 0x1C, 0x3F, 0xF8, 0x1F, 0xF0,
    0x70, 0x1C, 0x60, 0x0C, 0x60, 0x0C, 0x70, 0x1C, 0x3F, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    
    // 9
    0x39, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x1F, 0xF0, 0x3F, 0xF8, 0x70, 0x1C, 0x60, 0x0C, 0x60, 0x0C, 0x70, 0x1C, 0x3F, 0xFC, 0x1F, 0xFC,
    0x00, 0x0C, 0x00, 0x0C, 0x00, 0x0C, 0x70, 0x1C, 0x3F, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00,
    
    // Colon (:)
    0x3A, 0x08, 0x20, 0x00, 0x00, 0x08,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
    
    // Letters A-Z (65-90) - Bold industrial style
    // A
    0x41, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x00, 0x60, 0x00, 0xF0, 0x01, 0xF8, 0x03, 0xFC, 0x07, 0xFE, 0x0F, 0xFF, 0x1F, 0xFF, 0x3F, 0xFF,
    0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x00, 0x00,
    
    // M
    0x4D, 0x20, 0x20, 0x00, 0x00, 0x20,
    0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF,
    0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x00, 0x00,
    
    // P
    0x50, 0x18, 0x20, 0x00, 0x00, 0x18,
    0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF,
    0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x7F, 0xFF, 0x00, 0x00
};

// Font descriptor structure
struct NexaRustSlabFont {
    static constexpr const uint8_t* font_data = nexarustslab_font;
    static constexpr uint8_t height = 32;  // 32 pixels height
    static constexpr uint8_t baseline = 28; // Baseline position
};

// Function to setup the NexaRustSlab font
inline void setupNexaRustSlabFont(lgfx::LGFXBase& display) {
    // For now, use a built-in font that looks similar to NexaRustSlab
    // The custom bitmap font will be implemented in a future update
    display.setFont(&fonts::FreeSansBold24pt7b);
    Serial.println("Using FreeSansBold24pt7b to simulate NexaRustSlab bold style");
}

// Alternative function for smaller text
inline void setupNexaRustSlabFontSmall(lgfx::LGFXBase& display) {
    // Use FreeSansBold18pt7b for smaller text
    display.setFont(&fonts::FreeSansBold18pt7b);
    Serial.println("Using FreeSansBold18pt7b for smaller NexaRustSlab simulation");
}

// Function for very large text (like time display)
inline void setupNexaRustSlabFontLarge(lgfx::LGFXBase& display) {
    // Use FreeSansBold24pt7b with larger size
    display.setFont(&fonts::FreeSansBold24pt7b);
    display.setTextSize(1.5);  // Make it even larger
    Serial.println("Using FreeSansBold24pt7b with 1.5x size for large NexaRustSlab simulation");
}

// Custom font renderer functions (declarations)
void setupNexaRustSlabFontCustom(lgfx::LGFXBase& display);
void drawNexaRustSlabText(lgfx::LGFXBase* display, int32_t x, int32_t y, const char* text, uint32_t color);

#endif // NEXARUSTSLAB_FONT_H 